# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[remote.github]
owner = "kattouf"
repo = "Sake"
# token = ""

[changelog]
# changelog header
header = """
# Changelog\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]({{ self::remote_url() }}/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## {{ version | trim_start_matches(pat="v") }} - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## Unreleased
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}

    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") -%}
        {% if commit.scope -%}
        * {{self::commit(commit=commit)}}\
        {% endif -%}
    {% endfor -%}
    {% for commit in commits -%}
        {% if commit.scope -%}
        {% else -%}
          * {{self::commit(commit=commit)}}\
        {% endif -%}
    {% endfor -%}
{% endfor %}

{%- if github -%}
{% if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
  {% raw %}\n{% endraw -%}
  ## New Contributors
{%- endif %}\
{% for contributor in github.contributors | filter(attribute="is_first_time", value=true) %}
  * @{{ contributor.username }} made their first contribution
    {%- if contributor.pr_number %} in \
      [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) \
    {%- endif %}
{%- endfor -%}
{%- endif -%}

{% if version %}
    {% if previous.version %}
      **Full Changelog**: {{ self::remote_url() }}/compare/{{ previous.version }}...{{ version }}
    {% endif %}
{% else -%}
  {% raw %}\n{% endraw %}
{% endif %}

{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% macro commit(commit) -%}
{% if commit.scope %}**({{commit.scope}})** {% endif -%}
{% if commit.breaking %}**breaking** {% endif -%}
{% if commit.remote.pr_title -%}
  {%- set commit_message = commit.remote.pr_title -%}
{%- else -%}
  {%- set commit_message = commit.message -%}
{%- endif -%}
{{ commit_message | split(pat="\n") | first | trim }} by \
{% if commit.remote.username %}[@{{commit.remote.username}}](https://github.com/{{commit.remote.username}})\
{% else %}{{commit.author.name}}{% endif %} in \
{% if commit.remote.pr_number %}[#{{ commit.remote.pr_number }}]({{ self::remote_url() }}/pull/{{ commit.remote.pr_number }})\
{% else %}[{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }})\
{%- endif %}
{% endmacro commit -%}
"""
# template for the changelog footer
footer = """
<!-- generated by git-cliff -->
"""
# remove the leading and trailing whitespace from the template
trim = true
# postprocessors
postprocessors = []

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = false
# process each line of a commit as an individual commit
split_commits = false
# regex for preprocessing the commit messages
commit_preprocessors = [
  # remove issue numbers from commits
  { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "" },
]
# regex for parsing and grouping commits
commit_parsers = [
  { message = '^chore\(release\): bump version', skip = true },
  { message = '^(chore|fix)\(deps\):', group = "<!-- 99 -->:package: Dependency Updates", scope = "" },
  { message = '^feat', group = "<!-- 00 -->:rocket: Features" },
  { message = '^fix', group = "<!-- 01 -->:bug: Bug Fixes" },
  { message = '^test', group = "<!-- 02 -->:test_tube: Testing" },
  { message = '^perf', group = "<!-- 03 -->:zap: Performance" },
  { message = '^refactor', group = "<!-- 04 -->:tractor: Refactoring" },
  { message = '^doc', group = "<!-- 05 -->:books: Documentation" },
  { body = '.*security', group = "<!-- 06 -->:shield: Security" },
  { message = '^project', group = "<!-- 07 -->:file_folder: Project" },
  { message = '^revert', group = "<!-- 39 -->:leftwards_arrow_with_hook: Revert" },
  { message = '.', group = "<!-- 49 -->:card_index_dividers: Other Changes" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# sort the tags topologically
topo_order = false
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"
