import ArgumentParser
import Foundation

struct CleanCommand: AsyncParsableCommand {
    static let configuration = CommandConfiguration(
        commandName: "clean",
        abstract: "Remove all build artifacts generated by the SakeApp to ensure a clean state for future builds."
    )

    @OptionGroup
    var options: CommonOptions

    func run() async throws {
        do {
            let configManager = ConfigManager(cliConfig: CLIConfig(commonOptions: options, commandRelatedOptions: nil))
            let config = try configManager.resolvedConfig()

            let manager: SakeAppManager<InitializedMode> = try .makeInInitializedMode(sakeAppPath: config.sakeAppPath)
            try await manager.clean()
        } catch {
            logError(error.localizedDescription)
            CleanCommand.exit(withError: ExitCode.failure)
        }
    }
}
